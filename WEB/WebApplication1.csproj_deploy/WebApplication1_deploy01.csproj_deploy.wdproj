<!-- 
  Microsoft Visual Studio 2008 Web Deployment Project 
  http://go.microsoft.com/fwlink/?LinkID=104956

-->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="3.5" DefaultTargets="Build">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>9.0.21022</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{5369651F-4315-41F5-9386-B0B01E2B177C}</ProjectGuid>
    <SourceWebPhysicalPath>..\WebApplication1</SourceWebPhysicalPath>
    <SourceWebProject>
      {72FA2E0D-CF86-4A33-8A83-8567B8FF01EF}|WEB\WebApplication1\WebApplication1.csproj
    </SourceWebProject>
    <SourceWebVirtualPath>/WebApplication1.csproj</SourceWebVirtualPath>
    <TargetFrameworkVersion>v3.5</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>.\Debug</OutputPath>
    <EnableUpdateable>false</EnableUpdateable>
    <UseMerge>true</UseMerge>
    <SingleAssemblyName>WebApplication1.csproj_deploy</SingleAssemblyName>
    <UseWebConfigReplacement>false</UseWebConfigReplacement>
    <DeleteAppDataFolder>false</DeleteAppDataFolder>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugSymbols>false</DebugSymbols>
    <OutputPath>.\Release</OutputPath>
    <EnableUpdateable>false</EnableUpdateable>
    <UseMerge>true</UseMerge>
    <SingleAssemblyName>WebApplication1.csproj_deploy</SingleAssemblyName>
  </PropertyGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|AnyCPU'">
    <AssemblyAttributes Include="AssemblyFileVersion">
      <Value>1.2.3.4</Value>
    </AssemblyAttributes>
    <AssemblyAttributes Include="AssemblyVersion">
      <Value>1.2.3.4</Value>
    </AssemblyAttributes>
  </ItemGroup>
  <Import Project="$(MSBuildExtensionsPath)\Microsoft\WebDeployment\v9.0\Microsoft.WebDeployment.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.WebDeployment.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="BeforeMerge">
  </Target>
  <Target Name="AfterMerge">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
  <ItemGroup>
    <!--Use the ExcludeFromBuild item to exclude files from being deployed-->
    <ExcludeFromBuild Include="$(SourceWebPhysicalPath)\WebApplication1.csproj*" />
    <ExcludeFromBuild Include="$(SourceWebPhysicalPath)\CustomOut\**\*" />
    <ExcludeFromBuild Include="$(SourceWebPhysicalPath)\**\.svn\**\*" />
  </ItemGroup>
  <PropertyGroup>
    <!-- aspnet_regiis.exe requires a path without the trailing slash -->
    <_OutputPathNoTrailingSlash>Out_Deploy01\$(Configuration)</_OutputPathNoTrailingSlash>
    <!--Customize output location using the OutputPath property-->
    <OutputPath>$(_OutputPathNoTrailingSlash)\</OutputPath>
    <_WebProject>$(SourceWebPhysicalPath)\WebApplication1.csproj</_WebProject>
    <ContribRoot>..\..\BUILD\GenericBuild\Contrib\</ContribRoot>
  </PropertyGroup>
  <!-- JSCompress task is contained in MSBuildCommunityTasks -->
  <Import Project="$(ContribRoot)MSBuildCommunityTasks\MSBuild.Community.Tasks.Targets" />
  <PropertyGroup>
    <BuildDependsOn>
  BuildWebProject;
  $(BuildDependsOn);
  CompressJavascript
</BuildDependsOn>
    <EnableJSCompress Condition="'$(EnableJSCompress)'=='' &#xD;&#xA;    AND &#xD;&#xA;    '$(Configuration)'=='Release'">true</EnableJSCompress>
  </PropertyGroup>
  <Target Name="CompressJavascript">
    <ItemGroup>
      <_JSFilesToCompress Include="$(OutputPath)Scripts\**\*.js" />
    </ItemGroup>
    <Message Text="Compresing Javascript files" Condition="'$(EnableJSCompress)'=='true'" Importance="high" />
    <Message Text="NOT compresing Javascript files" Condition="'$(EnableJSCompress)'!='true'" Importance="high" />
    <JSCompress Files="@(_JSFilesToCompress)" Condition="'$(EnableJSCompress)'=='true'" />
  </Target>
  <Target Name="BuildWebProject">
    <MSBuild Projects="$(_WebProject)" Properties="Configuration=$(Configuration);Platform=$(Platform)" />
  </Target>
  <!-- Clean items -->
  <PropertyGroup>
    <FullCleanDependsOn>
      Clean;
      CleanWebProject;
    </FullCleanDependsOn>
  </PropertyGroup>
  <Target Name="FullClean"
          DependsOnTargets="$(FullCleanDependsOn)"/>
  <Target Name="CleanWebProject">
    <MSBuild
      Projects="$(_WebProject)"
      Properties="Configuration=$(Configuration);Platform=$(Platform)"
      Targets="Clean"/>
  </Target>
  <!-- 
  Copies the output to remote server then creates a Virtual Directory for it.  
  This approach has the following limitations:
    1) You have Admin rights to the remote machine
    2) IIS on remote machine must have read/write access to 
        the folder where the files are being placed.
    3) Since files are copied 1 by 1 it is slow
    
  Also if you encrypt the web.config you have to make sure that the
  key in the machine.config on this machine is the same as that on
  the remote machine or the encryption will break.
  -->
<Target Name="DeployToServer" DependsOnTargets="Build">
  <PropertyGroup>
    <_ServerName>sayed_762</_ServerName>
    <_VDirName>Sample01</_VDirName>
    <_ServerDeployPath>\\$(_ServerName)\D$\Stage\$(_VDirName)\</_ServerDeployPath>
    <_ServerLocalPath>D:\Stage\$(_VDirName)\</_ServerLocalPath>
    <_ReplaceExisting>true</_ReplaceExisting>
  </PropertyGroup>

  <!-- Create dir if it doesn't exist -->
  <MakeDir Directories="$(_ServerDeployPath)"/>
  
  <!-- Copy files -->
  <ItemGroup>
    <_FilesToDeploy 
      Include="$(OutputPath)**\*" 
      Exclude="$(OutputPath)obj\**\*;$(OutputPath)bin\Samples\**\*"/>
  </ItemGroup>

  <Message Text="Copying files to remote server [$(_ServerName)]"/>
  <Copy SourceFiles="@(_FilesToDeploy)"
        DestinationFiles="@(_FilesToDeploy->'$(_ServerDeployPath)%(RecursiveDir)%(Filename)%(Extension)')"/>

  <CreateVirtualDirectory       
    Alias = "$(_VDirName)"      
    ServerName ="$(_ServerName)"      
    Path = "$(_ServerLocalPath)"      
    ReplaceExisting = "$(_ReplaceExisting)" />
</Target>
</Project>